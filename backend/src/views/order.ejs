<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order Page</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f5f5f5;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 1200px;
      margin: 20px auto;
      background-color: #fff;
      padding: 20px;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    .menu-items-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
    }
    .menu-card {
      background-color: white;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      text-align: center;
    }
    .menu-image {
      width: 100%;
      height: auto;
      border-radius: 8px;
    }
    .quantity-selector input {
      width: 60px;
      padding: 5px;
      text-align: center;
    }
    .order-button {
      margin-top: 10px;
      background-color: #3498db;
      color: white;
      border: none;
      padding: 10px 20px;
      cursor: pointer;
      border-radius: 5px;
    }
    .order-button:hover {
      background-color: #2980b9;
    }

    input[type="submit"] {
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
    }

    #get {
      background-color: #2ecc71;
    }

    #get:hover {
      background-color: #27ae60;
    }
  </style>
</head>
<body>

<div class="container">
  <h1>Menu Items</h1>
  <h1 id="user-info" data-username="<%= user._id %>" style="display: none;">
    <%= user.username %>
</h1>
  <form id="orderForm" action="/order" method="POST">
    <div class="menu-items-container">
      <% if (menus && menus.length > 0) { %>
        <% menus.forEach(item => { %>
          <% if(item.availability) { %>
          <div class="menu-card">
            <h3><%= item.name %></h3>
            <p>Category: <%= item.category %></p>
            <p>Price: $<%= item.price %></p>
            <div class="quantity-selector">
              <label for="quantity_<%= item.serialNumber %>">Quantity:</label>
              <input
                type="number"
                id="quantity_<%= item.serialNumber %>"
                name="items[<%= item.serialNumber %>][quantity]"
                value="0"
                min="0"
                max="10"
              />
            </div>

            <input
              type="hidden"
              name="items[<%= item._id %>][id]"
              value="<%= item._id %>"
            />
            <input
              type="hidden"
              name="items[<%= item._id %>][price]"
              value="<%= item.price %>"
            />
          </div>
          <% } %>
        <% }) %>
      <% } else { %>
        <p>No menu items available.</p>
      <% } %>
    </div>

    <button type="submit" class="order-button">Place Order</button>
  </form>
</div>

<script>
  document.getElementById('orderForm').addEventListener('submit', async(event)=> {
    event.preventDefault(); // Prevent default form submission

    const orderData = []; // Array to store ordered items
    var totalAmount=0;

    const userId=document.getElementById('user-info').getAttribute('data-username');

    const createdAt= new Date().toISOString();
    const status="Pending";
    // Loop through each item in the form
    document.querySelectorAll('.menu-card').forEach(function(card) {
      const quantityInput = card.querySelector('input[name*="[quantity]"]');
      const quantity = parseInt(quantityInput.value);

      totalAmount+=quantity * parseFloat(card.querySelector('input[name*="[price]"]').value);

      // Include only items with non-zero quantity
      if (quantity > 0) {
        const itemId = card.querySelector('input[name*="[id]"]').value;
        //const price = parseFloat(card.querySelector('input[name*="[price]"]').value);
        // Push the valid item to orderData
        orderData.push({
          menuItemId: itemId,
          quantity: quantity,
          //price: price
        });
      }
    });

    // If no items are selected, show an alert
    if (orderData.length === 0) {
      alert('Please add at least one item to your order.');
      return;
    }

    try{
      console.log("hi3");
      const response = await fetch("/order_food", { // Use relative path
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ userId,totalAmount,createdAt,status,orderData }),
      });
      console.log("hi");
      const data = await response.json();
      console.log("hi2");
      // if (!response.ok) {
      //       console.error("Error:", data);
      //       return;
      //       }
      console.log(data);
      window.location.href = "/basket";
    }
    catch (err) {
      console.log(err);
    }
  });
</script>

</body>
</html>